name: Build
on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: 
      - completed
env:
  CARGO_TERM_COLOR: always
jobs:
# build_linux:
#   runs-on: ubuntu-latest
#   steps:
#   - uses: actions/checkout@v3
#   - name: Install gtk
#     run: |
#       sudo apt-get update
#       sudo apt-get install build-essential libgtk-3-dev libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev
#   - name: Install cargo bundle
#     uses: actions-rs/cargo@v1
#     with:
#       command: install
#       args: cargo-bundle
#   - name: Build bundle
#     uses: actions-rs/cargo@v1
#     with:
#       command: bundle
#       args: --release
#   - name: 'Upload Artifact'
#     uses: actions/upload-artifact@v3
#     with:
#       name: icy_term_linux
#       path: |
#         target/release/bundle/deb/game_cheetah_*.deb
#         build/file_id.diz

  build_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build bundle
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Install WiX
      run: dotnet tool install --global wix --version 4.0.1
    - name: Create PFX certificate
      id: create-pfx
      shell: pwsh
      env:
        PFX_CONTENT: ${{ secrets.WINDOWS_CERT }}
      run: |
        $pfxPath = Join-Path -Path $env:RUNNER_TEMP -ChildPath "cert.pfx";
        $encodedBytes = [System.Convert]::FromBase64String($env:PFX_CONTENT);
        Set-Content $pfxPath -Value $encodedBytes
        echo "PFX_PATH=$pfxPath" >> $GITHUB_OUTPUT
        $Env:version=cargo pkgid | foreach-object { $_ -replace '(.*)#','' }
        echo "VERSION=$version" >> $GITHUB_OUTPUT
    - name: Build MSI installer.
      env:
        PFX_PATH: ${{ steps.create-pfx.outputs.PFX_PATH }}
        VERSION: ${{ steps.create-pfx.outputs.VERSION }}
      run: |
        wix extension add WixToolset.UI.wixext WixToolset.Util.wixext
        wix build -arch "x64" -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext -d "PATH=${{ env.PFX_PATH }}"  -out "./icy_term-_${{ env.VERSION }}-installer.msi" "build/windows/icy_term.wxs"
    - name: Delete PFX certificate
      env:
        PFX_PATH: ${{ steps.create-pfx.outputs.PFX_PATH }}
      run: del ${{ env.PFX_PATH }}
    - name: 'Upload Artifact'
      env:
        VERSION: ${{ steps.create-pfx.outputs.VERSION }}
      uses: actions/upload-artifact@v3
      with:
        name: icy_term_${{ env.VERSION }}_windows
        path: |
          icy_term-_${{ env.VERSION }}-installer.msi
          build/file_id.diz
