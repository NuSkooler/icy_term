name: Build
on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: 
      - completed
env:
  CARGO_TERM_COLOR: always
jobs:
  build_linux:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v3
   - name: Install gtk
     run: |
       sudo apt-get update
       sudo apt-get install build-essential libgtk-3-dev libasound2-dev libxcb-shape0-dev libxcb-xfixes0-dev
   - name: Install cargo deb
     uses: actions-rs/cargo@v1
     with:
       command: install
       args: cargo-deb
   - name: Install cargo get
     uses: actions-rs/cargo@v1
     with:
       command: install
       args: cargo-get
   - name: Build bundle
     id: build-bundle
     run: |
       echo "VERSION=$(cargo get version)" >> $GITHUB_OUTPUT
       echo "DEB=$(cargo deb)" >> $GITHUB_OUTPUT
   - name: 'Upload Artifact'
     uses: actions/upload-artifact@v3
     env:
      VERSION: ${{ steps.build-bundle.outputs.VERSION }}
      DEB: ${{ steps.build-bundle.outputs.DEB }}
     with:
       name: icy_term_linux${{ env.VERSION }}
       path: |
         ${{ env.DEB }}
         build/file_id.diz

  build_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build bundle
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Install WiX
      run: dotnet tool install --global wix --version 4.0.1
    - name: Create PFX certificate
      id: create-pfx
      shell: pwsh
      env:
        PFX_CONTENT: ${{ secrets.WINDOWS_CERT }}
      run: |
        $encodedBytes = [System.Convert]::FromBase64String($env:PFX_CONTENT);
        Set-Content "./cert.pfx" -Value $encodedBytes
        $version=cargo pkgid | foreach-object { $_ -replace '(.*)#','' }
        echo "VERSION=$version" >> $env:GITHUB_ENV
    - name: Build MSI installer.
      env:
        VERSION: ${{ steps.create-pfx.outputs.VERSION }}
      run: |
        echo "Building ${{ env.VERSION }} installerâ€¦"
        wix extension add WixToolset.UI.wixext WixToolset.Util.wixext
        wix build -arch "x64" -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext -d "PATH=./cert.pfx"  -out "./icy_term-${{ env.VERSION }}-installer.msi" "build/windows/icy_term.wxs"
    - name: Delete PFX certificate
      run: del "./cert.pfx"
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      env:
        VERSION: ${{ steps.create-pfx.outputs.VERSION }}
      with:
        name: icy_term_${{ env.VERSION }}_windows
        path: |
          icy_term-${{ env.VERSION }}-installer.msi
          build/file_id.diz
